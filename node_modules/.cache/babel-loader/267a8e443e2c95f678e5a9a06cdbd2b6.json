{"ast":null,"code":"var _jsxFileName = \"/Users/priscillapang/Documents/Code/react-photo-gallery/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; //Import Components \n\nimport apiKey from './components/Config';\nimport Search from './components/Search';\nimport Nav from './components/Nav';\nimport Gallery from './components/Gallery';\nimport NotFound from './components/NotFound';\nimport Loading from './components/Loading';\nexport class App extends Component {\n  //Constructor of states\n  constructor() {\n    super();\n\n    this.fetchPhotos = (query = \"sun\") => {\n      let URL = \"https://www.flickr.com/services/rest/?method=flickr.photos.search&text=\".concat(query, \"&per_page=24&api_key=\").concat(apiKey, \"&sort=relevance&safe_search=1&format=json&nojsoncallback=1\");\n      console.log(query);\n      axios.get(URL).then(response => {\n        // console.log(response.data.photos.photo)\n        // console.log(this.state.query)\n        //Check query and render accordingly\n        // if(query === 'sun'){\n        //   this.setState({\n        //     button1 : response.data.photos.photo, \n        //     isLoading : false\n        //   })\n        // } \n        // else if(query === 'stars') {\n        //   this.setState({\n        //     button2 : response.data.photos.photo,\n        //     isLoading : false\n        //   })\n        // }\n        // else if(this.query === 'moon') {\n        //   this.setState({\n        //     button3 : response.data.photos.photo,\n        //     isLoading : false\n        //   })\n        // }\n        // else {\n        //   this.setState({\n        //     search : response.data.photos.photo,\n        //     isLoading : false\n        //   })\n        // }\n        this.setState({\n          data: response.data.photos.photo,\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          isLoading: true,\n          error: true\n        });\n      });\n    };\n\n    this.state = {\n      data: [],\n      isLoading: true,\n      error: null\n    };\n  } //Functions\n  //Fetch data with Axios\n\n\n  //End of fetchPhotos()\n  //Lifecycle hooks\n  componentDidMount() {\n    this.fetchPhotos();\n  } //\n\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Search, {\n      onSearch: this.props.fetchPhotos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.isLoading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Gallery, {\n        title: 'sun',\n        value: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/sun\",\n      render: () => React.createElement(Gallery, {\n        title: 'sun',\n        value: this.state.data,\n        onClick: this.fetchPhotos(\"sun\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/stars\",\n      render: () => React.createElement(Gallery, {\n        title: 'stars',\n        value: this.state.data,\n        onClick: this.fetchPhotos(\"stars\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/moon\",\n      render: () => React.createElement(Gallery, {\n        title: 'moon',\n        value: this.state.data,\n        onClick: this.fetchPhotos(\"moon\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/search/:query\",\n      render: () => React.createElement(Gallery, {\n        title: this.query,\n        value: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/priscillapang/Documents/Code/react-photo-gallery/src/App.js"],"names":["React","Component","axios","BrowserRouter","Route","Switch","apiKey","Search","Nav","Gallery","NotFound","Loading","App","constructor","fetchPhotos","query","URL","console","log","get","then","response","setState","data","photos","photo","isLoading","catch","error","state","componentDidMount","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport { BrowserRouter , Route , Switch } from 'react-router-dom'\n\n\n\n//Import Components \nimport apiKey from './components/Config'\nimport Search from './components/Search'\nimport Nav from './components/Nav'\nimport Gallery from './components/Gallery'\nimport NotFound from './components/NotFound'\nimport Loading from './components/Loading'\n\n\nexport class App extends Component {\n\n  //Constructor of states\n  constructor (){\n    super()\n    this.state = {\n      data : [],\n      isLoading : true,\n      error : null\n    }\n  }\n\n  //Functions\n  //Fetch data with Axios\n  fetchPhotos = (query = \"sun\") => {\n    let URL = `https://www.flickr.com/services/rest/?method=flickr.photos.search&text=${query}&per_page=24&api_key=${apiKey}&sort=relevance&safe_search=1&format=json&nojsoncallback=1`\n\n    console.log(query)\n    axios.get(URL)\n    .then(response => {\n      // console.log(response.data.photos.photo)\n      // console.log(this.state.query)\n      //Check query and render accordingly\n      // if(query === 'sun'){\n      //   this.setState({\n      //     button1 : response.data.photos.photo, \n      //     isLoading : false\n      //   })\n      // } \n      // else if(query === 'stars') {\n      //   this.setState({\n      //     button2 : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n      // else if(this.query === 'moon') {\n      //   this.setState({\n      //     button3 : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n      // else {\n      //   this.setState({\n      //     search : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n\n      this.setState({\n        data : response.data.photos.photo,\n        isLoading : false\n      })\n    })\n    .catch(error => {\n      console.log(error)\n      this.setState({\n        isLoading : true,\n        error : true\n      })\n    })\n  }//End of fetchPhotos()\n    \n  //Lifecycle hooks\n  componentDidMount(){\n    this.fetchPhotos()\n  }//\n\n\n\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Search onSearch={this.props.fetchPhotos} />\n          <Nav/>\n          {\n            (this.state.isLoading)\n            ? <Loading/>\n            :\n            <Switch>\n              <Route exact path=\"/\"\n              render={ () => <Gallery title={'sun'} value={this.state.data}/> } />\n              <Route path=\"/sun\"\n              render={ () => <Gallery title={'sun'} value={this.state.data} onClick={this.fetchPhotos(\"sun\")}/> } />\n              <Route path=\"/stars\"\n              render={ () => <Gallery title={'stars'} value={this.state.data} onClick={this.fetchPhotos(\"stars\")}/> } />\n              <Route path=\"/moon\"\n              render={ () => <Gallery title={'moon'} value={this.state.data} onClick={this.fetchPhotos(\"moon\")}/> } />\n              <Route path=\"/search/:query\"\n              render={ () => <Gallery title={this.query} value={this.state.data}/> } />\n              <Route component={NotFound} />\n            </Switch>\n          }\n      </div>\n      </BrowserRouter>\n\n\n    )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}