{"version":3,"sources":["components/Config.js","components/Nav.js","components/Search.js","components/GalleryItem.js","components/NotFound.js","components/Gallery.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","Nav","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","react_router_dom","to","Component","Search","state","searchText","onSearchChange","e","_this","setState","target","handleSubmit","preventDefault","path","concat","query","searchTerm","props","history","push","onSearch","currentTarget","reset","_this2","onSubmit","type","onChange","name","ref","input","placeholder","fill","height","viewBox","width","xmlns","d","withRouter","GalleryItem","_ref","obj","src","jpg","alt","imgName","NotFound","aria-label","role","Gallery","display","objArr","map","result","i","farm","server","id","secret","title","length","objItem","components_GalleryItem","components_NotFound","Loading","App","call","fetchPhotos","undefined","URL","isLoading","axios","get","then","response","button1","data","photos","photo","button2","button3","catch","error","console","log","clearInterval","class","components_Search","components_Nav","Loading_Loading","react_router","exact","render","components_Gallery","loading","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7167a765.chunk.js","sourcesContent":["const apiKey = \"c4c5f0be3de7790953f90adb667c8254\";\nexport default apiKey;","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport class Nav extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"main-nav\">\n                    <ul>\n                    <li ><NavLink to=\"/sun\">Sun</NavLink></li>\n                    <li><NavLink to=\"/stars\">Stars</NavLink></li>\n                    <li><NavLink to=\"/moon\">Moon</NavLink></li>\n                    </ul>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Nav\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\n\nclass Search extends Component {\n\n    state = {\n        searchText: ''\n    }\n  \n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value })\n  }\n  \n  handleSubmit = e => {\n    //prevent default behaviour of page refresh\n    e.preventDefault()\n    let path = `/search/${this.query.value}`\n    let searchTerm = this.state.searchText\n\n    //push the query to path\n    this.props.history.push(path)\n\n    //pass the search query back to app to fetch\n    this.props.onSearch(searchTerm)\n    e.currentTarget.reset()\n  }\n  \n  render() {  \n\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input type=\"search\" \n               onChange={this.onSearchChange}\n               name=\"search\" \n               ref={input => (this.query = input)}\n               placeholder=\"Search...\" />\n        <button type=\"submit\" className=\"search-button\">\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n          </svg>\n        </button>\n      </form>      \n    )\n  }\n}\n\nexport default withRouter (Search)\n\n","import React from 'react'\n\nfunction GalleryItem({obj}) {\n\n    return(\n        <li><img src={obj.jpg} alt={obj.imgName}/></li>    \n    )\n\n}\n\nexport default GalleryItem\n","import React, { Component } from 'react'\n\n\nexport class NotFound extends Component {\n    render() {\n        return (\n            <div className='not-found'>\n                <h1>404</h1>\n                <p>You enter a wrong URL or your search did not return any results. Please try again.</p>   \n                <span aria-label=\"LOUDLY-CRYING-FACE\" role=\"img\">&#128557;</span>       \n            </div>\n        )\n    }\n}\n\nexport default NotFound\n\n\n\n\n\n","import React from 'react';\nimport GalleryItem from './GalleryItem';\nimport NotFound from './NotFound'\n\nconst Gallery = ({value}) => {\n  //Generate image url with the provide template url\n  let results = value;\n  let display;\n  let obj;\n  let objArr = [];\n\n  //Iterate through the data\n  results.map( function (result, i ) {\n    // generate an array of URL for farming image that match the searched query \n    let jpg = `https://farm${result.farm}.staticflickr.com/${result.server}/${result.id}_${result.secret}.jpg`\n    let imgName = `${result.title}`\n    let key = i\n    \n    obj = { jpg , imgName , key}\n    objArr.push(obj)\n    return objArr\n    \n  });// end of ForEach\n\n  \n\n  if (objArr.length > 0 ) {\n    //Iterate through farmed data\n    display = objArr.map((objItem, i) => { \n      return <GalleryItem obj={objItem} key={objItem.key} />\n    });//end of map\n  } \n  else {\n    display = <NotFound/>\n  }\n\n\n\n  \n  return (\n      \n      <div className=\"photo-container\">\n        <ul>\n          {display}\n        </ul>\n      </div>\n    );\n}//end of component \n\nexport default Gallery;\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component {\n    render() {\n        return (\n            <div>\n                <span aria-label=\"THINKING-FACE\" role=\"img\">&#129300;</span>\n                <p>Loading...</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport { BrowserRouter , Route , Switch } from 'react-router-dom'\n\n\n\n//Import Components \nimport apiKey from './components/Config'\nimport Nav from './components/Nav'\nimport Search from './components/Search'\nimport Gallery from './components/Gallery'\nimport NotFound from './components/NotFound'\nimport Loading from './components/Loading'\n\n\nexport class App extends Component {\n\n  //Constructor of states\n  constructor (){\n    super()\n    this.state = {\n      photos : [],\n      button1 : [],\n      button2 : [],\n      button3 : [],\n      isLoading : true,\n      error : null\n    }\n  }\n\n  //Functions\n  //Fetch data with Axios\n  fetchPhotos = (query = 'sun') => {\n    let URL = `https://www.flickr.com/services/rest/?method=flickr.photos.search&text='${query},photography'&per_page=24&api_key=${apiKey}&sort=relevance&safe_search=1&format=json&nojsoncallback=1` \n    this.setState({ isLoading: true })\n\n    axios.get(URL)\n    .then(response => {\n      // this.setState({\n      //   photos : results.data.photos.photo,\n      //   isLoading : false\n      // })\n      if(query === 'sun'){\n        this.setState({\n          button1 : response.data.photos.photo, \n          isLoading : false\n        })\n      } \n      else if(query === 'stars') {\n        this.setState({\n          button2 : response.data.photos.photo,\n          isLoading : false\n        })\n      }\n      else if(query === 'moon') {\n        this.setState({\n          button3 : response.data.photos.photo,\n          isLoading : false\n        })\n      }\n      else {\n        this.setState({\n          photos : response.data.photos.photo,\n          isLoading : false\n        })\n      }\n    })\n    .catch(error => {\n      console.log(error)\n      this.setState({\n        isLoading : true,\n        error : true\n      })\n    })\n\n    console.log(query)\n  }//End of fetchPhotos()\n    \n  //Lifecycle hooks\n  componentWillUnmount() {\n    clearInterval(this.state.photos);\n    clearInterval(this.state.button1);\n    clearInterval(this.state.button2);\n    clearInterval(this.state.button3);\n  }//\n\n  componentDidMount(){\n    this.fetchPhotos(\"sun\")\n    this.fetchPhotos(\"stars\")\n    this.fetchPhotos(\"moon\")\n  }//\n\n  \n\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"stars\"></div>\n        <div class=\"twinkling\"></div>\n        <div className=\"container\">\n        <h1>Search the universe below...</h1>\n          <Search onSearch={this.fetchPhotos}/>\n          <Nav/>\n          {\n            (this.state.isLoading)\n            ? <Loading/>\n            :\n            <Switch>\n              <Route exact path=\"/\"\n              render={ () => <Gallery title={'sun'} value={this.state.button1}/> } \n              />\n              <Route path=\"/sun\"\n              render={ () => <Gallery title={'sun'}  value={this.state.button1}/> } \n              />\n              <Route path=\"/stars\"\n              render={ () => <Gallery title={'stars'} value={this.state.button2}/> } \n              />\n              <Route path=\"/moon\"\n              render={ () => <Gallery title={'moon'} value={this.state.button3} /> } \n              />\n              <Route path=\"/search/:query\"\n              render={ () => (\n                <div>\n                {\n                  this.state.loading ? <p> Loading ...</p> : this.state.photos ? <Gallery title={this.query} value={this.state.photos}/> : <NotFound /> \n                }\n                </div>\n              )} \n              />\n            </Switch>\n          }\n        </div> \n      </BrowserRouter>\n      \n        \n      \n    )}//\n  \n}\n\nexport default App\n\n     // console.log(response.data.photos.photo)\n      // console.log(this.state.query)\n      //Check query and render accordingly\n      // if(query === 'sun'){\n      //   this.setState({\n      //     button1 : response.data.photos.photo, \n      //     isLoading : false\n      //   })\n      // } \n      // else if(query === 'stars') {\n      //   this.setState({\n      //     button2 : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n      // else if(this.query === 'moon') {\n      //   this.setState({\n      //     button3 : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n      // else {\n      //   this.setState({\n      //     search : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n\n\n       \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}