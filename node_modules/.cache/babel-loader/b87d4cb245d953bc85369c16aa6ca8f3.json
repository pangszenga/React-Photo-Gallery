{"ast":null,"code":"var _jsxFileName = \"/Users/priscillapang/Documents/Code/react-photo-gallery/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { BrowserRouter, Route } from 'react-router-dom'; //Import Components \n\nimport apiKey from './components/Config';\nimport Header from './components/Header';\nimport Gallery from './components/Gallery';\nimport NotFound from './components/NotFound';\nimport Loading from './components/Loading';\nexport class App extends Component {\n  //Constructor of states\n  constructor() {\n    super();\n\n    this.fetchPhotos = (query = \"sun\") => {\n      let URL = \"https://www.flickr.com/services/rest/?method=flickr.photos.search&text=\".concat(query, \"&per_page=24&api_key=\").concat(apiKey, \"&sort=relevance&safe_search=1&format=json&nojsoncallback=1\"); // console.log(query)\n\n      axios.get(URL).then(response => {\n        this.setState({\n          data: response.data.photos.photo,\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          isLoading: true,\n          error: true\n        });\n      });\n    };\n\n    this.state = {\n      data: [],\n      isLoading: true,\n      error: null\n    };\n  } //Functions\n  //Fetch data with Axios\n\n\n  //End of fetchPhotos()\n  //Lifecycle hooks\n  componentDidMount() {\n    this.fetchPhotos();\n  } //\n\n\n  render() {\n    const params = () => {\n      switch (this.params) {\n        case \"/\":\n          return React.createElement(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => React.createElement(Gallery, {\n              title: 'sun',\n              value: this.state.data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n\n        case \"/sun\":\n          return React.createElement(Gallery, {\n            title: 'sun',\n            value: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          });\n\n        case \"/stars\":\n          return React.createElement(Gallery, {\n            title: 'sun',\n            value: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n\n        case \"/moon\":\n          return React.createElement(Gallery, {\n            title: 'sun',\n            value: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n\n        case \"/search/:query\":\n          return React.createElement(Gallery, {\n            title: 'sun',\n            value: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          });\n\n        default:\n          return React.createElement(NotFound, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          });\n      }\n    }; //\n\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onSearch: this.fetchPhotos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.isLoading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, params())));\n  }\n\n}\nexport default App; // console.log(response.data.photos.photo)\n// console.log(this.state.query)\n//Check query and render accordingly\n// if(query === 'sun'){\n//   this.setState({\n//     button1 : response.data.photos.photo, \n//     isLoading : false\n//   })\n// } \n// else if(query === 'stars') {\n//   this.setState({\n//     button2 : response.data.photos.photo,\n//     isLoading : false\n//   })\n// }\n// else if(this.query === 'moon') {\n//   this.setState({\n//     button3 : response.data.photos.photo,\n//     isLoading : false\n//   })\n// }\n// else {\n//   this.setState({\n//     search : response.data.photos.photo,\n//     isLoading : false\n//   })\n// }\n// <Switch>\n// <Route exact path=\"/\"\n// render={ () => <Gallery title={'sun'} value={this.state.data}/> } />\n//   <Route path=\"/sun\"\n//   render={ () => <Gallery title={'sun'} value={this.state.data} onClick={this.fetchPhotos(\"sun\")}/> } />\n//   <Route path=\"/stars\"\n//   render={ () => <Gallery title={'stars'} value={this.state.data} onClick={this.fetchPhotos(\"stars\")}/> } />\n//   <Route path=\"/moon\"\n//   render={ () => <Gallery title={'moon'} value={this.state.data} onClick={this.fetchPhotos(\"moon\")}/> } />\n//   <Route path=\"/search/:query\"\n//   render={ () => <Gallery title={this.query} value={this.state.data}/> } />\n//   <Route component={NotFound} />\n// </Switch>","map":{"version":3,"sources":["/Users/priscillapang/Documents/Code/react-photo-gallery/src/App.js"],"names":["React","Component","axios","BrowserRouter","Route","apiKey","Header","Gallery","NotFound","Loading","App","constructor","fetchPhotos","query","URL","get","then","response","setState","data","photos","photo","isLoading","catch","error","console","log","state","componentDidMount","render","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport { BrowserRouter , Route  } from 'react-router-dom'\n\n\n\n//Import Components \nimport apiKey from './components/Config'\nimport Header from './components/Header'\nimport Gallery from './components/Gallery'\nimport NotFound from './components/NotFound'\nimport Loading from './components/Loading'\n\n\nexport class App extends Component {\n\n  //Constructor of states\n  constructor (){\n    super()\n    this.state = {\n      data : [],\n      isLoading : true,\n      error : null\n    }\n  }\n\n  //Functions\n  //Fetch data with Axios\n  fetchPhotos = (query = \"sun\") => {\n    let URL = `https://www.flickr.com/services/rest/?method=flickr.photos.search&text=${query}&per_page=24&api_key=${apiKey}&sort=relevance&safe_search=1&format=json&nojsoncallback=1`\n\n    // console.log(query)\n    axios.get(URL)\n    .then(response => {\n      this.setState({\n        data : response.data.photos.photo,\n        isLoading : false\n      })\n    })\n    .catch(error => {\n      console.log(error)\n      this.setState({\n        isLoading : true,\n        error : true\n      })\n    })\n  }//End of fetchPhotos()\n\n  \n    \n  //Lifecycle hooks\n  componentDidMount(){\n    this.fetchPhotos()\n  }//\n\n\n  render() {\n    const params = () => {\n      switch(this.params) {\n  \n        case \"/\":      \n        return <Route exact path=\"/\" render={ () => <Gallery title={'sun'} value={this.state.data}/> } />\n\n        case \"/sun\":   \n        return <Gallery title={'sun'} value={this.state.data}/>\n\n        case \"/stars\": \n        return <Gallery title={'sun'} value={this.state.data}/>\n\n        case \"/moon\":  \n        return <Gallery title={'sun'} value={this.state.data}/>\n\n        case \"/search/:query\": \n        return <Gallery title={'sun'} value={this.state.data}/>\n  \n        default:      return <NotFound/>\n      }\n    }//\n\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header onSearch={this.fetchPhotos()}/>\n          {\n            (this.state.isLoading)\n            ? <Loading/>\n            :\n            <ul>{ params() }</ul>\n          }\n      </div>\n      </BrowserRouter>\n\n\n    )\n  }\n}\n\nexport default App\n\n     // console.log(response.data.photos.photo)\n      // console.log(this.state.query)\n      //Check query and render accordingly\n      // if(query === 'sun'){\n      //   this.setState({\n      //     button1 : response.data.photos.photo, \n      //     isLoading : false\n      //   })\n      // } \n      // else if(query === 'stars') {\n      //   this.setState({\n      //     button2 : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n      // else if(this.query === 'moon') {\n      //   this.setState({\n      //     button3 : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n      // else {\n      //   this.setState({\n      //     search : response.data.photos.photo,\n      //     isLoading : false\n      //   })\n      // }\n\n\n       // <Switch>\n              // <Route exact path=\"/\"\n              // render={ () => <Gallery title={'sun'} value={this.state.data}/> } />\n            //   <Route path=\"/sun\"\n            //   render={ () => <Gallery title={'sun'} value={this.state.data} onClick={this.fetchPhotos(\"sun\")}/> } />\n            //   <Route path=\"/stars\"\n            //   render={ () => <Gallery title={'stars'} value={this.state.data} onClick={this.fetchPhotos(\"stars\")}/> } />\n            //   <Route path=\"/moon\"\n            //   render={ () => <Gallery title={'moon'} value={this.state.data} onClick={this.fetchPhotos(\"moon\")}/> } />\n            //   <Route path=\"/search/:query\"\n            //   render={ () => <Gallery title={this.query} value={this.state.data}/> } />\n            //   <Route component={NotFound} />\n            // </Switch>\n\n"]},"metadata":{},"sourceType":"module"}